[{"/Users/manan/Desktop/DBMS-Lab-4/client_/src/index.js":"1","/Users/manan/Desktop/DBMS-Lab-4/client_/src/App.jsx":"2","/Users/manan/Desktop/DBMS-Lab-4/client_/src/routes/MatchHomePage.jsx":"3","/Users/manan/Desktop/DBMS-Lab-4/client_/src/routes/VenueHomePage.jsx":"4","/Users/manan/Desktop/DBMS-Lab-4/client_/src/routes/PointsTablePage.jsx":"5","/Users/manan/Desktop/DBMS-Lab-4/client_/src/routes/PlayerDetailPage.jsx":"6","/Users/manan/Desktop/DBMS-Lab-4/client_/src/routes/VenueDetailPage.jsx":"7","/Users/manan/Desktop/DBMS-Lab-4/client_/src/context/Context.js":"8","/Users/manan/Desktop/DBMS-Lab-4/client_/src/routes/MatchDetailPage.jsx":"9","/Users/manan/Desktop/DBMS-Lab-4/client_/src/apis/MatchFinder.js":"10","/Users/manan/Desktop/DBMS-Lab-4/client_/src/apis/PlayerFinder.js":"11","/Users/manan/Desktop/DBMS-Lab-4/client_/src/apis/VenueFinder.js":"12","/Users/manan/Desktop/DBMS-Lab-4/client_/src/components/Header.jsx":"13","/Users/manan/Desktop/DBMS-Lab-4/client_/src/components/AddVenue.jsx":"14","/Users/manan/Desktop/DBMS-Lab-4/client_/src/components/MatchList.jsx":"15","/Users/manan/Desktop/DBMS-Lab-4/client_/src/components/VenueList.jsx":"16"},{"size":142,"mtime":1643634092468,"results":"17","hashOfConfig":"18"},{"size":2112,"mtime":1643641366635,"results":"19","hashOfConfig":"18"},{"size":266,"mtime":1643727146223,"results":"20","hashOfConfig":"18"},{"size":331,"mtime":1643727081132,"results":"21","hashOfConfig":"18"},{"size":1830,"mtime":1643634933613,"results":"22","hashOfConfig":"18"},{"size":4762,"mtime":1643634933613,"results":"23","hashOfConfig":"18"},{"size":3400,"mtime":1643634933616,"results":"24","hashOfConfig":"18"},{"size":3314,"mtime":1643727299513,"results":"25","hashOfConfig":"18"},{"size":15447,"mtime":1643728251525,"results":"26","hashOfConfig":"18"},{"size":139,"mtime":1643634933593,"results":"27","hashOfConfig":"18"},{"size":146,"mtime":1643634933593,"results":"28","hashOfConfig":"18"},{"size":145,"mtime":1643634933593,"results":"29","hashOfConfig":"18"},{"size":182,"mtime":1643634933594,"results":"30","hashOfConfig":"18"},{"size":2066,"mtime":1643634933594,"results":"31","hashOfConfig":"18"},{"size":3190,"mtime":1643641301308,"results":"32","hashOfConfig":"18"},{"size":1529,"mtime":1643634933603,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"g8nl8y",{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/manan/Desktop/DBMS-Lab-4/client_/src/index.js",[],"/Users/manan/Desktop/DBMS-Lab-4/client_/src/App.jsx",["68"],"/Users/manan/Desktop/DBMS-Lab-4/client_/src/routes/MatchHomePage.jsx",[],["69","70"],"/Users/manan/Desktop/DBMS-Lab-4/client_/src/routes/VenueHomePage.jsx",[],"/Users/manan/Desktop/DBMS-Lab-4/client_/src/routes/PointsTablePage.jsx",["71"],"/Users/manan/Desktop/DBMS-Lab-4/client_/src/routes/PlayerDetailPage.jsx",["72","73","74"],"/Users/manan/Desktop/DBMS-Lab-4/client_/src/routes/VenueDetailPage.jsx",["75","76"],"/Users/manan/Desktop/DBMS-Lab-4/client_/src/context/Context.js",[],"/Users/manan/Desktop/DBMS-Lab-4/client_/src/routes/MatchDetailPage.jsx",["77","78","79","80"],"// import React from 'react';\n// import MatchSummary from '../components/MatchSummary';\n// import ScoreCard from '../components/ScoreCard';\n// import ScoreComparison from '../components/ScoreComparison';\nimport React, { useContext, useEffect, Component } from \"react\";\nimport {Line,Doughnut} from 'react-chartjs-2';\n// import { render } from 'react-dom';\nimport { useParams } from \"react-router-dom\";\nimport MatchFinder from '../apis/MatchFinder';\n// import ScoreCard from \"../components/ScoreCard\";\nimport { Context } from '../context/Context';\nimport { useHistory } from \"react-router-dom\";\nconst MatchDetailPage = () => {\n  const { id } = useParams();\n\n  const divStyleLeft = {\n    width: '50%', \n    float: 'left'\n  };\n  const divStyleRight = {\n    width: '50%', \n    float: 'right'\n  };\n  // const { selectedMatch, setSelectedMatch } = useContext(\n  //   Context\n  // );\n  const {  cat1, Scat1, cat2, Scat2,TBat1, MW, SMW, TBall1, STBat1, STBall1, TBat2, TBall2, STBat2, STBall2,   i2bat, seti2bat, pie, setpie,pie2, setpie2, ER1, SER1, SER2, ER2, TR1, TR2, STR1, STR2 } = useContext(\n    Context\n  );\n  const { i1bat, seti1bat , TossWinner, STossWinner, INF, VEN, UMP, P1, P2,  SINF, SVEN, SUMP, SP1, SP2, B1, SB1, B2, SB2, TW1, TW2, STW1, STW2} = useContext(\n    Context\n  );\n  const {comp, setcomp,comp2, setcomp2, names,  SNames, cardtoggle, Scardtoggle,  Summarytogglefunc, Summarytoggle, TN,  STN}=  useContext(\n    Context\n  );\n  let history = useHistory();\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await MatchFinder.get(`/matches/${id}`);\n        console.log(response.data.data);\n        // setSelectedMatch(response.data.data.innings1_batting);\n        seti1bat(response.data.data.innings1_batting);\n        seti2bat(response.data.data.innings2_batting);\n        setcomp(response.data.data.innings1_plot);\n        setcomp2(response.data.data.innings2_plot);\n        setpie (response.data.data.pieplot);\n        setpie2 (response.data.data.pieplot2);\n        STN(response.data.data.battingOrder);\n        SNames(response.data.data.Teamnames);\n        SER2(response.data.data.innings2_extra_runs);\n        SER1(response.data.data.innings1_extra_runs);\n        STR1(response.data.data.innings1_total_runs);\n        STR2(response.data.data.innings2_total_runs);\n        SB1(response.data.data.innings1_bowling);\n        SB2(response.data.data.innings2_bowling);\n        STW1 (response.data.data.innings1_total_wickets);\n        STW2 (response.data.data.innings2_total_wickets);\n        SINF (response.data.data.info);\n        SVEN (response.data.data.venue);\n        STBat1(response.data.data.TopBatters1);\n        STBall1 (response.data.data.TopBowlers1);\n        STBat2(response.data.data.TopBatters2);\n        STBall2 (response.data.data.TopBowlers2);\n        SUMP (response.data.data.umpires);\n        SMW(response.data.data.winnername)\n        SP1 (response.data.data.player1);\n        SP2 (response.data.data.player2);\n        STossWinner(response.data.data.TossWinner);\n        Scat1(response.data.data.cat1);\n        Scat2(response.data.data.cat2);\n       \n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    fetchData();\n  }, []);\n  \n  const handlePlayerSelect = (id) => {\n    history.push(`/players/${id}`);\n  };\n\n  \n  return <div>\n      <h1 className='font-weight-light display-1 text-center'>Score Card </h1>\n      <div>\n      <h3>Inning 1 : {TN.bat1} </h3>\n      <h3>Batting</h3>\n<div className='list-group'>\n      <table className=\"table table-hover table-dark\">\n          <thead>\n            <tr className='bg-primary'>\n                <th scope = \"col\">Batter</th>\n                <th scope = \"col\">Runs</th>\n                <th scope = \"col\">Fours</th>\n                <th scope = \"col\">Sixes</th>\n                <th scope = \"col\">Balls Faced</th>\n            </tr>\n          </thead>\n<tbody>\n  {i1bat && i1bat.map (player =>{\n    return (\n<tr \n key={player.striker}\n >\n<td onClick={() => handlePlayerSelect(player.striker)}>{player.player_name}</td>\n<td>{player.runs}</td>\n<td>{player.fours}</td>\n<td>{player.sixs}</td>\n<td>{player.balls_faced}</td>\n</tr>\n\n    )\n  })}\n</tbody>      \n      </table>\n  </div>\n <div>\n Extras : {ER1.extra_runs }\n   </div>\n Total Score : {TR1.total_runs} ({TW1.total_wickets})\n  </div>\n\n\n  <div>\n      <h3>Bowling</h3>\n<div className='list-group'>\n      <table className=\"table table-hover table-dark\">\n          <thead>\n            <tr className='bg-primary'>\n                <th scope = \"col\">  Bowler</th>\n                <th scope = \"col\">Balls Bowled</th>\n                <th scope = \"col\">runs_given</th>\n                <th scope = \"col\">wickets</th>\n            </tr>\n          </thead>\n          <tbody>\n  {B1 && B1.map (player =>{\n    return (\n<tr \n key={player.player_id}\n >\n<td onClick={() => handlePlayerSelect(player.player_id)}>{player.player_name}</td>\n<td>{player.balls_bowled}</td>\n<td>{player.runs_given}</td>\n<td>{player.wickets}</td>\n{/* <td>{player.balls_faced}</td> */}\n</tr>\n\n    )\n  })}\n</tbody>    \n      </table>\n  </div>\n  </div>\n\n\n      <div>\n      <h3>Inning 2 : {TN.bat2} </h3>\n      <h3>Batting</h3>\n<div className='list-group'>\n      <table className=\"table table-hover table-dark\">\n          <thead>\n            <tr className='bg-primary'>\n                <th scope = \"col\">Batter</th>\n                <th scope = \"col\">Runs</th>\n                <th scope = \"col\">Fours</th>\n                <th scope = \"col\">Sixes</th>\n                <th scope = \"col\">Balls Faced</th>\n            </tr>\n          </thead>\n<tbody>\n  {i2bat && i2bat.map (player =>{\n    return (\n<tr \n key={player.striker}\n >\n<td onClick={() => handlePlayerSelect(player.striker)}>{player.player_name}</td>\n<td>{player.runs}</td>\n<td>{player.fours}</td>\n<td>{player.sixs}</td>\n<td>{player.balls_faced}</td>\n</tr>\n\n    )\n  })}\n</tbody>      \n      </table>\n  </div>\n <div>\n Extras : {ER2.extra_runs }\n   </div>\n Total Score : {TR2.total_runs} ({TW2.total_wickets})\n  </div>\n\n\n  <div>\n      <h3>Bowling</h3>\n<div className='list-group'>\n      <table className=\"table table-hover table-dark\">\n          <thead>\n            <tr className='bg-primary'>\n                <th scope = \"col\">  Bowler</th>\n                <th scope = \"col\">Balls Bowled</th>\n                <th scope = \"col\">runs_given</th>\n                <th scope = \"col\">wickets</th>\n            </tr>\n          </thead>\n          <tbody>\n  {B2 && B2.map (player =>{\n    return (\n<tr \n key={player.player_id}\n >\n<td onClick={() => handlePlayerSelect(player.player_id)}>{player.player_name}</td>\n<td>{player.balls_bowled}</td>\n<td>{player.runs_given}</td>\n<td>{player.wickets}</td>\n{/* <td>{player.balls_faced}</td> */}\n</tr>\n\n    )\n  })}\n</tbody>    \n      </table>\n  </div>\n  </div>\n\n\n<div>MATCH INFO SECTION</div>\n<table className=\"table table-hover table-dark\">\n    <thead>\n      <tr className='bg-primary'>\n          <th scope = \"col\">Field</th>\n          <th scope = \"col\">Information</th>\n      </tr>\n    </thead>\n    <tbody>\n        <tr><td>Match </td><td>{id}, {names.team_name1} v/s {names.team_name2},  {INF.season_year}</td></tr>\n        <tr><td>Toss</td><td> {TossWinner.name} won the toss and opt to  {INF.toss_name}</td></tr>\n        <tr><td>Venue</td><td>{VEN.venue_name}, {VEN.city_name}</td></tr>\n        <tr><td>Umpires</td><td>\n          \n        {UMP && UMP.map (player =>{\n    return (\nplayer.umpire_name+'  '  \n    )\n  })}\n          \n          \n          </td></tr>\n        <tr><td>Playing XI of team1</td><td>\n                  \n        {P1 && P1.map (player =>{\n    return (\nplayer.player_name + ' '  \n    )\n  })}</td></tr>\n        <tr><td>Playing XI of team2</td><td>     {P2 && P2.map (player =>{\n    return (\nplayer.player_name  + '  '   \n    )\n  })}</td></tr>\n        {/* <tr><td>Highest Score Chased</td><td>{V4.highest}</td></tr> */}\n    </tbody>\n </table>\n\n  \n  <button id = \"comparisonToggle\"onClick={() => Scardtoggle(\"1\")} > Show Comparison</button>\n  \n  {cardtoggle === \"1\"? (\n    <div id = \"comparison\">\n    <Line\n      data = {\n       \n       {\n                 labels: comp.map((crypto) => crypto.over_id),\n                 type: 'line',\n                 datasets : [{\n                  pointRadius: 0,\n                   fill: false,\n                   lineTension: 0.5,\n                   borderColor: 'rgb(255, 99, 132)',\n                   backgroundColor: 'rgb(255, 99, 132)',\n                   borderWidth: 2,\n                 label: TN.bat1,\n                 data: comp.map ((cr) => cr.sum)\n                 },\n                 {\n                  type: 'line',\n                  fill: false,\n                  lineTension: 0.5,\n                  borderColor:'rgb(54, 162, 235)',\n                  backgroundColor: 'rgb(54, 162, 235)',\n                  borderWidth: 2,\n                  pointRadius: 0,\n                label: TN.bat2,\n                data: comp2.map ((cr) => cr.sum)\n                },\n                {\n                  type: 'scatter',\n                  label: 'Wicket',\n                  data: [{\n                    x: 9,\n                    y: 100\n                  }, {\n                    x: 10,\n                    y: 50\n                  }, {\n                    x: 11,\n                    y: 120\n                  }],\n                  backgroundColor: 'rgb(255, 99, 132)'\n                },\n                {\n                  type: 'scatter',\n                  label: 'Wicket',\n                  data: [{\n                    x: 9,\n                    y: 101\n                  }, {\n                    x: 10,\n                    y: 51\n                  }, {\n                    x: 11,\n                    y: 121\n                  }],\n                  backgroundColor: 'rgb(54, 162, 235)'\n                }\n                ],\n                \n                 \n                 } \n      }\n      options = {{\n    \n          yAxes: [{\n            scaleLabel: {\n              \n              labelString: 'probability'\n            }\n          }],\n          xAxes: [{\n            scaleLabel: {\n              \n              labelString: 'probability'\n            }\n          }]\n        }    \n      }\n      // options={{\n      //   title:{\n      //     display:true,\n      //     text:'Average Rainfall per month',\n      //     fontSize:50\n      //   },\n      //   legend:{\n      //     display:true,\n      //     position:'below'\n      //   },\n      // }}\n      \n     />\n             </div> \n               \n                ) : null}\n  \n\n\n<div>\n\n\n\n  <button id = \"summaryTOggle\"onClick={() => Summarytogglefunc(\"1\")} > Show Summary</button>\n  {Summarytoggle === \"1\"? (\n<div>\n  <h2>MATCH SUMMARY</h2>\n <div> Match ID : {id}, IPL ,  Season Year: {INF.season_year}</div>\n <div>{names.team_name1} - {TR1.total_runs} / {TW1.total_wickets} </div>\n <div className='list-group'>\n      <table className=\"table table-hover table-dark\">\n          <thead>\n            <tr className='bg-primary'>\n                <th scope = \"col\">Player Name</th>\n                <th scope = \"col\">Runs Scored</th>\n                <th scope = \"col\">Balls Played</th>\n            </tr>\n          </thead>\n<tbody>\n  {TBat1 && TBat1.map (player =>{\n    return (\n<tr \n key={player.striker}\n >\n<td onClick={() => handlePlayerSelect(player.striker)}>{player.player_name}</td>\n<td>{player.runs_scored}</td>\n<td>{player.num_balls}</td>\n\n</tr>\n\n    )\n  })}\n</tbody>      \n      </table>\n  </div>\n  <div className='list-group'>\n      <table className=\"table table-hover table-dark\">\n          <thead>\n            <tr className='bg-primary'>\n                <th scope = \"col\">Player Name</th>\n                <th scope = \"col\">Wickets Taken</th>\n                <th scope = \"col\">Runs Given</th>\n            </tr>\n          </thead>\n<tbody>\n  {TBall1 && TBall1.map (player =>{\n    return (\n<tr \n key={player.bowler}\n >\n<td onClick={() => handlePlayerSelect(player.bowler)}>{player.player_name}</td>\n<td>{player.wickets_taken}</td>\n<td>{player.runs_given}</td>\n\n</tr>\n\n    )\n  })}\n</tbody>      \n      </table>\n  </div>\n\n <div>{names.team_name2} - {TR2.total_runs} / {TW2.total_wickets} </div>\n <div className='list-group'>\n      <table className=\"table table-hover table-dark\">\n          <thead>\n            <tr className='bg-primary'>\n                <th scope = \"col\">Player Name</th>\n                <th scope = \"col\">Runs Scored</th>\n                <th scope = \"col\">Balls Played</th>\n            </tr>\n          </thead>\n<tbody>\n  {TBat2 && TBat2.map (player =>{\n    return (\n<tr \n key={player.striker}\n >\n<td onClick={() => handlePlayerSelect(player.striker)}>{player.player_name}</td>\n<td>{player.runs_scored}</td>\n<td>{player.num_balls}</td>\n\n</tr>\n\n    )\n  })}\n</tbody>      \n      </table>\n  </div>\n  \n  <div className='list-group'>\n      <table className=\"table table-hover table-dark\">\n          <thead>\n            <tr className='bg-primary'>\n                <th scope = \"col\">Player Name</th>\n                <th scope = \"col\">Wickets Taken</th>\n                <th scope = \"col\">Runs Given</th>\n            </tr>\n          </thead>\n<tbody>\n  {TBall2 && TBall2.map (player =>{\n    return (\n<tr \n key={player.bowler}\n >\n<td onClick={() => handlePlayerSelect(player.bowler)}>{player.player_name}</td>\n<td>{player.wickets_taken}</td>\n<td>{player.runs_given}</td>\n\n</tr>\n\n    )\n  })}\n</tbody>      \n      </table>\n  </div>\n\n  {MW.team_name} won by {INF.win_margin} {INF.win_type}\n<br></br>\n\n\n          \n<div style={divStyleLeft}>\n<h3>Pie plot for {TN.bat1}</h3>\n<Doughnut\n          data={{\n            labels: [\n                     'Ones', 'Twos','Fours', 'Sixes', 'Extras'],\n            datasets: [\n              {\n                label: 'Rainfall',\n                backgroundColor: [\n                  'rgb(255, 99, 132)',\n                  'rgb(54, 162, 235)',\n                  'rgb(255, 205, 86)',\n                  '\trgb(60,179,113)',\n                  'rgb(255,127,80)',\n\n                ],\n                hoverOffset: 4,\n                data: [pie.ones,pie.twos, pie.fours, pie.sixes,pie.extra_runs]\n              }\n            ]\n          }}\n  \n          options={{\n            title:{\n              display:true,\n              text:'Average Rainfall per month',\n              fontSize:50\n            },\n            legend:{\n              display:true,\n              position:'below'\n            },\n          }}\n        />\n</div> \n\n<div style = {divStyleRight}>\n<h3>Pie plot for {TN.bat2}</h3>\n<Doughnut\n          data={{\n            labels: [\n                     'Ones', 'Twos','Fours', 'Sixes', 'Extras'],\n            datasets: [\n              {\n                label: 'Rainfall',\n                backgroundColor: [\n                  'rgb(255, 99, 132)',\n                  'rgb(54, 162, 235)',\n                  'rgb(255, 205, 86)',\n                  '\trgb(60,179,113)',\n                  'rgb(255,127,80)',\n                  \n\n                ],\n                hoverOffset: 4,\n                data: [pie2.ones,pie2.twos, pie2.fours, pie2.sixes,pie2.extra_runs]\n              }\n            ]\n          }}\n  \n          options={{\n            title:{\n              display:true,\n              text:'Average Rainfall per month',\n              fontSize:50\n            },\n            legend:{\n              display:true,\n              position:'below'\n            },\n          }}\n        />\n</div>\n\n\n          </div>\n       ) : null}\n          </div>\n\n\n  \n  </div> \n  \n};\nexport default MatchDetailPage;\n\n\n","/Users/manan/Desktop/DBMS-Lab-4/client_/src/apis/MatchFinder.js",[],"/Users/manan/Desktop/DBMS-Lab-4/client_/src/apis/PlayerFinder.js",[],"/Users/manan/Desktop/DBMS-Lab-4/client_/src/apis/VenueFinder.js",[],"/Users/manan/Desktop/DBMS-Lab-4/client_/src/components/Header.jsx",[],"/Users/manan/Desktop/DBMS-Lab-4/client_/src/components/AddVenue.jsx",[],"/Users/manan/Desktop/DBMS-Lab-4/client_/src/components/MatchList.jsx",["81","82","83"],"/Users/manan/Desktop/DBMS-Lab-4/client_/src/components/VenueList.jsx",["84"],{"ruleId":"85","severity":1,"message":"86","line":16,"column":5,"nodeType":"87","endLine":16,"endColumn":33},{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","severity":1,"message":"93","line":19,"column":3,"nodeType":"94","endLine":19,"endColumn":5,"suggestions":"95"},{"ruleId":"96","severity":1,"message":"97","line":5,"column":8,"nodeType":"98","messageId":"99","endLine":5,"endColumn":13},{"ruleId":"96","severity":1,"message":"100","line":6,"column":14,"nodeType":"98","messageId":"99","endLine":6,"endColumn":22},{"ruleId":"92","severity":1,"message":"101","line":29,"column":3,"nodeType":"94","endLine":29,"endColumn":5,"suggestions":"102"},{"ruleId":"96","severity":1,"message":"97","line":5,"column":8,"nodeType":"98","messageId":"99","endLine":5,"endColumn":13},{"ruleId":"92","severity":1,"message":"101","line":29,"column":3,"nodeType":"94","endLine":29,"endColumn":5,"suggestions":"103"},{"ruleId":"96","severity":1,"message":"104","line":5,"column":40,"nodeType":"98","messageId":"99","endLine":5,"endColumn":49},{"ruleId":"96","severity":1,"message":"105","line":27,"column":12,"nodeType":"98","messageId":"99","endLine":27,"endColumn":16},{"ruleId":"96","severity":1,"message":"106","line":27,"column":25,"nodeType":"98","messageId":"99","endLine":27,"endColumn":29},{"ruleId":"92","severity":1,"message":"107","line":80,"column":6,"nodeType":"94","endLine":80,"endColumn":8,"suggestions":"108"},{"ruleId":"96","severity":1,"message":"109","line":8,"column":11,"nodeType":"98","messageId":"99","endLine":8,"endColumn":17},{"ruleId":"92","severity":1,"message":"110","line":32,"column":6,"nodeType":"94","endLine":32,"endColumn":22,"suggestions":"111"},{"ruleId":"92","severity":1,"message":"112","line":32,"column":19,"nodeType":"113","endLine":32,"endColumn":21},{"ruleId":"92","severity":1,"message":"114","line":20,"column":6,"nodeType":"94","endLine":20,"endColumn":8,"suggestions":"115"},"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-native-reassign",["116"],"no-negated-in-lhs",["117"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'setPointTable' and 'year'. Either include them or remove the dependency array.","ArrayExpression",["118"],"no-unused-vars","'Chart' is defined but never used.","Identifier","unusedVar","'Doughnut' is defined but never used.","React Hook useEffect has missing dependencies: 'SV1', 'SV2', 'SV3', 'SV4', 'SV5', 'SV6', 'SV7', 'SV8', and 'id'. Either include them or remove the dependency array.",["119"],["120"],"'Component' is defined but never used.","'cat1' is assigned a value but never used.","'cat2' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'SB1', 'SB2', 'SER1', 'SER2', 'SINF', 'SMW', 'SNames', 'SP1', 'SP2', 'STBall1', 'STBall2', 'STBat1', 'STBat2', 'STN', 'STR1', 'STR2', 'STW1', 'STW2', 'STossWinner', 'SUMP', 'SVEN', 'Scat1', 'Scat2', 'id', 'setcomp', 'setcomp2', 'seti1bat', 'seti2bat', 'setpie', and 'setpie2'. Either include them or remove the dependency array.",["121"],"'offset' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'pageCount', 'setMatches', and 'setOffset'. Either include them or remove the dependency array. You can also do a functional update 'setPageCount(p => ...)' if you only need 'pageCount' in the 'setPageCount' call.",["122"],"The 10 literal is not a valid dependency because it never changes. You can safely remove it.","Literal","React Hook useEffect has a missing dependency: 'setVenues'. Either include it or remove the dependency array.",["123"],"no-global-assign","no-unsafe-negation",{"desc":"124","fix":"125"},{"desc":"126","fix":"127"},{"desc":"126","fix":"128"},{"desc":"129","fix":"130"},{"desc":"131","fix":"132"},{"desc":"133","fix":"134"},"Update the dependencies array to be: [setPointTable, year]",{"range":"135","text":"136"},"Update the dependencies array to be: [SV1, SV2, SV3, SV4, SV5, SV6, SV7, SV8, id]",{"range":"137","text":"138"},{"range":"139","text":"138"},"Update the dependencies array to be: [SB1, SB2, SER1, SER2, SINF, SMW, SNames, SP1, SP2, STBall1, STBall2, STBat1, STBat2, STN, STR1, STR2, STW1, STW2, STossWinner, SUMP, SVEN, Scat1, Scat2, id, setcomp, setcomp2, seti1bat, seti2bat, setpie, setpie2]",{"range":"140","text":"141"},"Update the dependencies array to be: [itemOffset, pageCount, setMatches, setOffset]",{"range":"142","text":"143"},"Update the dependencies array to be: [setVenues]",{"range":"144","text":"145"},[589,591],"[setPointTable, year]",[983,985],"[SV1, SV2, SV3, SV4, SV5, SV6, SV7, SV8, id]",[980,982],[3214,3216],"[SB1, SB2, SER1, SER2, SINF, SMW, SNames, SP1, SP2, STBall1, STBall2, STBat1, STBat2, STN, STR1, STR2, STW1, STW2, STossWinner, SUMP, SVEN, Scat1, Scat2, id, setcomp, setcomp2, seti1bat, seti2bat, setpie, setpie2]",[1217,1233],"[itemOffset, pageCount, setMatches, setOffset]",[618,620],"[setVenues]"]