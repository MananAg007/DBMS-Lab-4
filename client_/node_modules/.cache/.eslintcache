[{"/Users/manan/Desktop/DBMS-Lab-4/client_/src/index.js":"1","/Users/manan/Desktop/DBMS-Lab-4/client_/src/App.jsx":"2","/Users/manan/Desktop/DBMS-Lab-4/client_/src/context/Context.js":"3","/Users/manan/Desktop/DBMS-Lab-4/client_/src/routes/VenueHomePage.jsx":"4","/Users/manan/Desktop/DBMS-Lab-4/client_/src/routes/VenueDetailPage.jsx":"5","/Users/manan/Desktop/DBMS-Lab-4/client_/src/routes/PlayerDetailPage.jsx":"6","/Users/manan/Desktop/DBMS-Lab-4/client_/src/routes/PointsTablePage.jsx":"7","/Users/manan/Desktop/DBMS-Lab-4/client_/src/routes/MatchDetailPage.jsx":"8","/Users/manan/Desktop/DBMS-Lab-4/client_/src/routes/MatchHomePage.jsx":"9","/Users/manan/Desktop/DBMS-Lab-4/client_/src/apis/VenueFinder.js":"10","/Users/manan/Desktop/DBMS-Lab-4/client_/src/apis/MatchFinder.js":"11","/Users/manan/Desktop/DBMS-Lab-4/client_/src/apis/PlayerFinder.js":"12","/Users/manan/Desktop/DBMS-Lab-4/client_/src/components/VenueList.jsx":"13","/Users/manan/Desktop/DBMS-Lab-4/client_/src/components/AddVenue.jsx":"14","/Users/manan/Desktop/DBMS-Lab-4/client_/src/components/MatchList.jsx":"15"},{"size":142,"mtime":1643733894382,"results":"16","hashOfConfig":"17"},{"size":2206,"mtime":1643749062652,"results":"18","hashOfConfig":"17"},{"size":3314,"mtime":1643733894382,"results":"19","hashOfConfig":"17"},{"size":466,"mtime":1643749162603,"results":"20","hashOfConfig":"17"},{"size":3931,"mtime":1643748854445,"results":"21","hashOfConfig":"17"},{"size":5425,"mtime":1643749126633,"results":"22","hashOfConfig":"17"},{"size":1830,"mtime":1643733894383,"results":"23","hashOfConfig":"17"},{"size":15719,"mtime":1643750424505,"results":"24","hashOfConfig":"17"},{"size":399,"mtime":1643749462209,"results":"25","hashOfConfig":"17"},{"size":145,"mtime":1643733894381,"results":"26","hashOfConfig":"17"},{"size":139,"mtime":1643733894381,"results":"27","hashOfConfig":"17"},{"size":146,"mtime":1643733894381,"results":"28","hashOfConfig":"17"},{"size":1529,"mtime":1643733894382,"results":"29","hashOfConfig":"17"},{"size":3056,"mtime":1643750024761,"results":"30","hashOfConfig":"17"},{"size":3190,"mtime":1643733894382,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"g8nl8y",{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"37"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"37"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"37"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/manan/Desktop/DBMS-Lab-4/client_/src/index.js",[],"/Users/manan/Desktop/DBMS-Lab-4/client_/src/App.jsx",["67","68"],"import React from 'react';\nimport {BrowserRouter as Router, Switch, Route} from \"react-router-dom\";\nimport MatchHomePage from './routes/MatchHomePage';\nimport MatchDetailPage from './routes/MatchDetailPage';\nimport VenueHomePage from './routes/VenueHomePage';\nimport VenueDetailPage from './routes/VenueDetailPage';\nimport PlayerDetailPage from './routes/PlayerDetailPage';\nimport { ContextProvider } from './context/Context';\nimport PointsTablePage from './routes/PointsTablePage';\nconst App = () => {\n    \n  const bg = {\n 'background-color': 'rgb(233, 150, 122)'\n  };\n  return (\n  <ContextProvider>\n      \n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light shadow fixed-top\">\n        <div className=\"container\">\n    <a className=\"navbar-brand\">Panda Cricket</a>\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarResponsive\" aria-controls=\"navbarResponsive\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n      <span className=\"navbar-toggler-icon\"></span>\n    </button>\n    <div className=\"collapse navbar-collapse\" id=\"navbarResponsive\">\n      <ul className=\"navbar-nav ms-auto\">\n        <li className=\"nav-item active\">\n          <a className=\"nav-link\" href=\"http://localhost:3000/matches\">Matches</a>\n        </li>\n        <li className=\"nav-item\">\n          <a className=\"nav-link\" href=\"http://localhost:3000/venues\">Venues</a>\n        </li>\n      </ul>\n    </div>\n    </div>\n</nav>\n<br></br>\n<br></br>\n<br></br>\n<div className=\"container\" >\n           <Router>\n                <Switch>\n               <Route exact path = \"/matches\" component={MatchHomePage}></Route>\n              <Route exact path = \"/matches/:id\" component = {MatchDetailPage}/>\n              <Route exact path = \"/players/:id\" component = {PlayerDetailPage}/>\n              <Route exact path  = \"/pointstable/:year\" component ={PointsTablePage}></Route>\n              <Route exact path = \"/venues\" component={VenueHomePage}></Route>\n            <Route exact path = \"/venues/:id\" component = {VenueDetailPage}/>\n                </Switch>\n             </Router>\n        </div>\n        \n        </ContextProvider>\n        \n    )\n}\n\nexport default App;\n",["69","70"],"/Users/manan/Desktop/DBMS-Lab-4/client_/src/context/Context.js",[],"/Users/manan/Desktop/DBMS-Lab-4/client_/src/routes/VenueHomePage.jsx",[],"/Users/manan/Desktop/DBMS-Lab-4/client_/src/routes/VenueDetailPage.jsx",["71","72"],"import React, { useContext, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport VenueFinder from '../apis/VenueFinder';\nimport { Context } from '../context/Context';\nimport Chart from 'chart.js/auto';\nimport {Line, Doughnut} from 'react-chartjs-2';\n\nconst VenueDetailPage = () => {\n  const { id } = useParams();\n  const {V1,SV1, V2, SV2, V3, SV3, V4, SV4, V5, SV5, V6, SV6, V7, SV7, V8, SV8} = useContext(Context)\n\n  const divStyleLeft = {\n    width: '30%', \n    float: 'left',\n    'text-align': 'center'\n  };\n  const divStyleRight = {\n    width: '65%', \n    float: 'right',\n    'text-align': 'center'\n  };\n  const head = {\n    color: '#7c795d', 'font-family': 'Trocchi', \n    'font-size': '60px', 'font-weight': 'normal', 'line-height': '48px', \n    'text-align': 'center'\n  }\n  useEffect( ()=> {\n    const fetchData = async () => {\n        try {\n            const response = await  VenueFinder.get(`/${id}`);\n            console.log(response)\n            SV1(response.data.data.r1);\n            SV2(response.data.data.r2);\n            SV3(response.data.data.r3);\n            SV4(response.data.data.r4);\n            SV5(response.data.data.r5);\n            SV6(response.data.data.r6);\n            SV7(response.data.data.r7);\n            SV8(response.data.data.r8);\n        } catch (err) {}\n    }\n\n    fetchData();\n},[]) \n\nreturn (<div>\n       \n        \n  <h1 style = {head}>Venue Details </h1>\n<table className=\"table table-hover table-dark\">\n    <thead>\n      <tr className='bg-primary'>\n          <th scope = \"col\">Field</th>\n          <th scope = \"col\">Information</th>\n      </tr>\n    </thead>\n    <tbody>\n        <tr><td>Venue Name</td><td>{V1.venue_name}</td></tr>\n        <tr><td>Address</td><td>{V1.city_name}, {V1.country_name}</td></tr>\n        <tr><td>Capacity</td><td>{V1.capacity}</td></tr>\n        <tr><td>Total Matches Played</td><td>{V2.count}</td></tr>\n        <tr><td>Highest Total Recorded</td><td>{V3.highest}</td></tr>\n        <tr><td>Lowest Total Recorded</td><td>{V3.lowest}</td></tr>\n        <tr><td>Highest Score Chased</td><td>{V4.highest}</td></tr>\n    </tbody>\n</table>\n<div style = {divStyleLeft}>\n<Doughnut\n          data={{\n            labels: ['Team Batting First: Won', 'Team Batting Second: Won',\n                     'Draw'],\n            datasets: [\n              {\n                label: 'Rainfall',\n                backgroundColor: [\n                  'rgb(255, 99, 132)',\n                  'rgb(54, 162, 235)',\n                  'rgb(255, 205, 86)'\n                ],\n                hoverOffset: 4,\n                data: [V5.count, V6.count, V7.count]\n              }\n            ]\n          }}\n  \n          options={{\n            plugins:{\n              title:{\n                display:true,\n                text:'Average Rainfall per month',\n                fontSize:50\n              },\n              legend:{\n                display:true,\n                position:'top'\n              },\n            }\n            \n          }}\n        />\n        </div>\n        <div style = {divStyleRight}>\n          <Line\n          data={{\n            labels: V8.map((crypto) => crypto.season_year),\n            datasets: [\n              {\n                label: 'Average First Innings score',\n                fill: false,\n                lineTension: 0.5,\n                backgroundColor: 'rgba(75,192,192,1)',\n                borderColor: 'rgba(0,0,0,1)',\n                borderWidth: 2,\n                data: V8.map((cr) => cr.avg)\n              }\n            ]\n          }}\n          options={{\n            plugins:{\n              title:{\n                display:true,\n                text:'Average First Innings score',\n                fontSize:20\n              },\n              legend:{\n                display:true,\n                position:'top'\n              }\n            }\n            \n          }}\n        /></div>\n\n</div>\n);\n\n};\n\n\n\nexport default VenueDetailPage;\n","/Users/manan/Desktop/DBMS-Lab-4/client_/src/routes/PlayerDetailPage.jsx",["73","74","75","76"],"/Users/manan/Desktop/DBMS-Lab-4/client_/src/routes/PointsTablePage.jsx",["77"],"/Users/manan/Desktop/DBMS-Lab-4/client_/src/routes/MatchDetailPage.jsx",["78","79","80"],"// import React from 'react';\n// import MatchSummary from '../components/MatchSummary';\n// import ScoreCard from '../components/ScoreCard';\n// import ScoreComparison from '../components/ScoreComparison';\nimport React, { useContext, useEffect, Component } from \"react\";\nimport {Line,Doughnut} from 'react-chartjs-2';\n// import { render } from 'react-dom';\nimport { useParams } from \"react-router-dom\";\nimport MatchFinder from '../apis/MatchFinder';\n// import ScoreCard from \"../components/ScoreCard\";\nimport { Context } from '../context/Context';\nimport { useHistory } from \"react-router-dom\";\nconst MatchDetailPage = () => {\n  const { id } = useParams();\n  const head = {\n    color: '#7c795d', 'font-family': 'Trocchi', \n    'font-size': '60px', 'font-weight': 'normal', 'line-height': '48px', \n    'text-align': 'center'\n  }\n  const head2 = {\n    color: '#7c795d', 'font-family': 'Trocchi', \n    'font-size': '40px', 'font-weight': 'normal', 'line-height': '48px', \n    'text-align': 'center'\n  }\n  const divStyleLeft = {\n    width: '49%', \n    float: 'left',\n    'text-align': 'center'\n  };\n  const divStyleRight = {\n    width: '49%', \n    float: 'right',\n    'text-align': 'center'\n  };\n  // const { selectedMatch, setSelectedMatch } = useContext(\n  //   Context\n  // );\n  const {  cat1, Scat1, cat2, Scat2,TBat1, MW, SMW, TBall1, STBat1, STBall1, TBat2, TBall2, STBat2, STBall2,   i2bat, seti2bat, pie, setpie,pie2, setpie2, ER1, SER1, SER2, ER2, TR1, TR2, STR1, STR2 } = useContext(\n    Context\n  );\n  const { i1bat, seti1bat , TossWinner, STossWinner, INF, VEN, UMP, P1, P2,  SINF, SVEN, SUMP, SP1, SP2, B1, SB1, B2, SB2, TW1, TW2, STW1, STW2} = useContext(\n    Context\n  );\n  const {comp, setcomp,comp2, setcomp2, names,  SNames, cardtoggle, Scardtoggle,  Summarytogglefunc, Summarytoggle, TN,  STN}=  useContext(\n    Context\n  );\n  let history = useHistory();\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await MatchFinder.get(`/matches/${id}`);\n        console.log(response.data.data);\n        // setSelectedMatch(response.data.data.innings1_batting);\n        seti1bat(response.data.data.innings1_batting);\n        seti2bat(response.data.data.innings2_batting);\n        setcomp(response.data.data.innings1_plot);\n        setcomp2(response.data.data.innings2_plot);\n        setpie (response.data.data.pieplot);\n        setpie2 (response.data.data.pieplot2);\n        STN(response.data.data.battingOrder);\n        SNames(response.data.data.Teamnames);\n        SER2(response.data.data.innings2_extra_runs);\n        SER1(response.data.data.innings1_extra_runs);\n        STR1(response.data.data.innings1_total_runs);\n        STR2(response.data.data.innings2_total_runs);\n        SB1(response.data.data.innings1_bowling);\n        SB2(response.data.data.innings2_bowling);\n        STW1 (response.data.data.innings1_total_wickets);\n        STW2 (response.data.data.innings2_total_wickets);\n        SINF (response.data.data.info);\n        SVEN (response.data.data.venue);\n        STBat1(response.data.data.TopBatters1);\n        STBall1 (response.data.data.TopBowlers1);\n        STBat2(response.data.data.TopBatters2);\n        STBall2 (response.data.data.TopBowlers2);\n        SUMP (response.data.data.umpires);\n        SMW(response.data.data.winnername)\n        SP1 (response.data.data.player1);\n        SP2 (response.data.data.player2);\n        STossWinner(response.data.data.TossWinner);\n        Scat1(response.data.data.innings1_scatter);\n        Scat2(response.data.data.innings2_scatter);\n       \n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    fetchData();\n  }, []);\n  \n  const handlePlayerSelect = (id) => {\n    history.push(`/players/${id}`);\n  };\n\n  \n  return <div>\n      <h1 style = {head}>Score Card </h1>\n      <div>\n      <h3>Inning 1 : {TN.bat1} </h3>\n      <h3>Batting</h3>\n<div className='list-group'>\n      <table className=\"table table-hover table-dark\">\n          <thead>\n            <tr className='bg-primary'>\n                <th scope = \"col\">Batter</th>\n                <th scope = \"col\">Runs</th>\n                <th scope = \"col\">Fours</th>\n                <th scope = \"col\">Sixes</th>\n                <th scope = \"col\">Balls Faced</th>\n            </tr>\n          </thead>\n<tbody>\n  {i1bat && i1bat.map (player =>{\n    return (\n<tr \n key={player.striker}\n >\n<td onClick={() => handlePlayerSelect(player.striker)}>{player.player_name}</td>\n<td>{player.runs}</td>\n<td>{player.fours}</td>\n<td>{player.sixs}</td>\n<td>{player.balls_faced}</td>\n</tr>\n\n    )\n  })}\n</tbody>      \n      </table>\n  </div>\n <div>\n Extras : {ER1.extra_runs }\n   </div>\n Total Score : {TR1.total_runs} ({TW1.total_wickets})\n  </div>\n\n\n  <div>\n      <h3>Bowling</h3>\n<div className='list-group'>\n      <table className=\"table table-hover table-dark\">\n          <thead>\n            <tr className='bg-primary'>\n                <th scope = \"col\">  Bowler</th>\n                <th scope = \"col\">Balls Bowled</th>\n                <th scope = \"col\">runs_given</th>\n                <th scope = \"col\">wickets</th>\n            </tr>\n          </thead>\n          <tbody>\n  {B1 && B1.map (player =>{\n    return (\n<tr \n key={player.player_id}\n >\n<td onClick={() => handlePlayerSelect(player.player_id)}>{player.player_name}</td>\n<td>{player.balls_bowled}</td>\n<td>{player.runs_given}</td>\n<td>{player.wickets}</td>\n{/* <td>{player.balls_faced}</td> */}\n</tr>\n\n    )\n  })}\n</tbody>    \n      </table>\n  </div>\n  </div>\n\n\n      <div>\n      <h3>Inning 2 : {TN.bat2} </h3>\n      <h3>Batting</h3>\n<div className='list-group'>\n      <table className=\"table table-hover table-dark\">\n          <thead>\n            <tr className='bg-primary'>\n                <th scope = \"col\">Batter</th>\n                <th scope = \"col\">Runs</th>\n                <th scope = \"col\">Fours</th>\n                <th scope = \"col\">Sixes</th>\n                <th scope = \"col\">Balls Faced</th>\n            </tr>\n          </thead>\n<tbody>\n  {i2bat && i2bat.map (player =>{\n    return (\n<tr \n key={player.striker}\n >\n<td onClick={() => handlePlayerSelect(player.striker)}>{player.player_name}</td>\n<td>{player.runs}</td>\n<td>{player.fours}</td>\n<td>{player.sixs}</td>\n<td>{player.balls_faced}</td>\n</tr>\n\n    )\n  })}\n</tbody>      \n      </table>\n  </div>\n <div>\n Extras : {ER2.extra_runs }\n   </div>\n Total Score : {TR2.total_runs} ({TW2.total_wickets})\n  </div>\n\n\n  <div>\n      <h3>Bowling</h3>\n<div className='list-group'>\n      <table className=\"table table-hover table-dark\">\n          <thead>\n            <tr className='bg-primary'>\n                <th scope = \"col\">  Bowler</th>\n                <th scope = \"col\">Balls Bowled</th>\n                <th scope = \"col\">runs_given</th>\n                <th scope = \"col\">wickets</th>\n            </tr>\n          </thead>\n          <tbody>\n  {B2 && B2.map (player =>{\n    return (\n<tr \n key={player.player_id}\n >\n<td onClick={() => handlePlayerSelect(player.player_id)}>{player.player_name}</td>\n<td>{player.balls_bowled}</td>\n<td>{player.runs_given}</td>\n<td>{player.wickets}</td>\n{/* <td>{player.balls_faced}</td> */}\n</tr>\n\n    )\n  })}\n</tbody>    \n      </table>\n  </div>\n  </div>\n\n\n<div style = {head2}>Match Information</div>\n<table className=\"table table-hover table-dark\">\n    <thead>\n      <tr className='bg-primary'>\n          <th scope = \"col\">Field</th>\n          <th scope = \"col\">Information</th>\n      </tr>\n    </thead>\n    <tbody>\n        <tr><td>Match </td><td>{id}, {names.team_name1} v/s {names.team_name2},  {INF.season_year}</td></tr>\n        <tr><td>Toss</td><td> {TossWinner.name} won the toss and opt to  {INF.toss_name}</td></tr>\n        <tr><td>Venue</td><td>{VEN.venue_name}, {VEN.city_name}</td></tr>\n        <tr><td>Umpires</td><td>\n          \n        {UMP && UMP.map (player =>{\n    return (\nplayer.umpire_name+'  '  \n    )\n  })}\n          \n          \n          </td></tr>\n        <tr><td>Playing XI of team1</td><td>\n                  \n        {P1 && P1.map (player =>{\n    return (\nplayer.player_name + ' '  \n    )\n  })}</td></tr>\n        <tr><td>Playing XI of team2</td><td>     {P2 && P2.map (player =>{\n    return (\nplayer.player_name  + '  '   \n    )\n  })}</td></tr>\n        {/* <tr><td>Highest Score Chased</td><td>{V4.highest}</td></tr> */}\n    </tbody>\n </table>\n\n  \n  <button id = \"comparisonToggle\"onClick={() => Scardtoggle(\"1\")} className='btn btn-primary'> Show Comparison</button>\n  \n  {cardtoggle === \"1\"? (\n    <div id = \"comparison\">\n    <Line\n      data = {\n       \n       {\n                 labels: comp.map((crypto) => crypto.over_id),\n                 type: 'line',\n                 datasets : [{\n                  pointRadius: 0,\n                   fill: false,\n                   lineTension: 0.5,\n                   borderColor: 'rgb(255, 99, 132)',\n                   backgroundColor: 'rgb(255, 99, 132)',\n                   borderWidth: 2,\n                 label: TN.bat1,\n                 data: comp.map ((cr) => cr.sum)\n                 },\n                 {\n                  type: 'line',\n                  fill: false,\n                  lineTension: 0.5,\n                  borderColor:'rgb(54, 162, 235)',\n                  backgroundColor: 'rgb(54, 162, 235)',\n                  borderWidth: 2,\n                  pointRadius: 0,\n                label: TN.bat2,\n                data: comp2.map ((cr) => cr.sum)\n                },\n                {\n                  type: 'scatter',\n                  label: 'Wicket',\n                  data: cat1.map(v => ({x: v.over_id, y: Number(v.sum)})),\n                  backgroundColor: 'rgb(255, 99, 132)'\n                },\n                {\n                  type: 'scatter',\n                  label: 'Wicket',\n                  data:cat2.map(v => ({x: v.over_id, y: Number(v.sum)})),\n                  backgroundColor: 'rgb(54, 162, 235)'\n                }\n                ],\n                \n                 \n                 } \n      }\n      options = {{\n    \n          yAxes: [{\n            scaleLabel: {\n              \n              labelString: 'probability'\n            }\n          }],\n          xAxes: [{\n            scaleLabel: {\n              \n              labelString: 'probability'\n            }\n          }]\n        }    \n      }\n      // options={{\n      //   title:{\n      //     display:true,\n      //     text:'Average Rainfall per month',\n      //     fontSize:50\n      //   },\n      //   legend:{\n      //     display:true,\n      //     position:'below'\n      //   },\n      // }}\n      \n     />\n             </div> \n               \n                ) : null}\n  \n\n\n<div>\n\n\n\n  <button id = \"summaryTOggle\"onClick={() => Summarytogglefunc(\"1\")} className='btn btn-primary'> Show Summary</button>\n  {Summarytoggle === \"1\"? (\n<div>\n  <h2 style = {head2}>Match Summary</h2>\n <div> Match ID : {id}, IPL ,  Season Year: {INF.season_year}</div>\n <br></br>\n <div style={divStyleLeft}>\n <div>{TN.bat1} - {TR1.total_runs} / {TW1.total_wickets} </div>\n <div className='list-group'>\n      <table className=\"table table-hover table-dark\">\n          <thead>\n            <tr className='bg-primary'>\n                <th scope = \"col\">Player Name</th>\n                <th scope = \"col\">Runs Scored</th>\n                <th scope = \"col\">Balls Played</th>\n            </tr>\n          </thead>\n<tbody>\n  {TBat1 && TBat1.map (player =>{\n    return (\n<tr \n key={player.striker}\n >\n<td onClick={() => handlePlayerSelect(player.striker)}>{player.player_name}</td>\n<td>{player.runs_scored}</td>\n<td>{player.num_balls}</td>\n\n</tr>\n\n    )\n  })}\n</tbody>      \n      </table>\n  </div>\n  <div className='list-group'>\n      <table className=\"table table-hover table-dark\">\n          <thead>\n            <tr className='bg-primary'>\n                <th scope = \"col\">Player Name</th>\n                <th scope = \"col\">Wickets Taken</th>\n                <th scope = \"col\">Runs Given</th>\n            </tr>\n          </thead>\n<tbody>\n  {TBall1 && TBall1.map (player =>{\n    return (\n<tr \n key={player.bowler}\n >\n<td onClick={() => handlePlayerSelect(player.bowler)}>{player.player_name}</td>\n<td>{player.wickets_taken}</td>\n<td>{player.runs_given}</td>\n\n</tr>\n\n    )\n  })}\n</tbody>      \n      </table>\n  </div>\n</div>\n\n<div style = {divStyleRight}>\n <div>{TN.bat2} - {TR2.total_runs} / {TW2.total_wickets} </div>\n <div className='list-group'>\n      <table className=\"table table-hover table-dark\">\n          <thead>\n            <tr className='bg-primary'>\n                <th scope = \"col\">Player Name</th>\n                <th scope = \"col\">Runs Scored</th>\n                <th scope = \"col\">Balls Played</th>\n            </tr>\n          </thead>\n<tbody>\n  {TBat2 && TBat2.map (player =>{\n    return (\n<tr \n key={player.striker}\n >\n<td onClick={() => handlePlayerSelect(player.striker)}>{player.player_name}</td>\n<td>{player.runs_scored}</td>\n<td>{player.num_balls}</td>\n\n</tr>\n\n    )\n  })}\n</tbody>      \n      </table>\n  </div>\n  \n  <div className='list-group'>\n      <table className=\"table table-hover table-dark\">\n          <thead>\n            <tr className='bg-primary'>\n                <th scope = \"col\">Player Name</th>\n                <th scope = \"col\">Wickets Taken</th>\n                <th scope = \"col\">Runs Given</th>\n            </tr>\n          </thead>\n<tbody>\n  {TBall2 && TBall2.map (player =>{\n    return (\n<tr \n key={player.bowler}\n >\n<td onClick={() => handlePlayerSelect(player.bowler)}>{player.player_name}</td>\n<td>{player.wickets_taken}</td>\n<td>{player.runs_given}</td>\n\n</tr>\n\n    )\n  })}\n</tbody>      \n      </table>\n  </div>\n</div>\n<br></br>\n  {MW.team_name} won by {INF.win_margin} {INF.win_type}\n<br></br>\n\n\n          \n<div style={divStyleLeft}>\n<h3></h3>\n<Doughnut\n          data={{\n            labels: [\n                     'Ones', 'Twos','Fours', 'Sixes', 'Extras'],\n            datasets: [\n              {\n                label: 'Rainfall',\n                backgroundColor: [\n                  'rgb(255, 99, 132)',\n                  'rgb(54, 162, 235)',\n                  'rgb(255, 205, 86)',\n                  '\trgb(60,179,113)',\n                  'rgb(255,127,80)',\n\n                ],\n                hoverOffset: 4,\n                data: [pie.ones,pie.twos, pie.fours, pie.sixes,pie.extra_runs]\n              }\n            ]\n          }}\n  \n          options={{\n            plugins:{\n              title:{\n                display:true,\n                text:'Pie plot for '+ TN.bat1,\n                fontSize:50\n              },\n              legend:{\n                display:true,\n                position:'top'\n              },\n            }\n            \n          }}\n        />\n</div> \n\n<div style = {divStyleRight}>\n<Doughnut\n          data={{\n            labels: [\n                     'Ones', 'Twos','Fours', 'Sixes', 'Extras'],\n            datasets: [\n              {\n                label: 'Rainfall',\n                backgroundColor: [\n                  'rgb(255, 99, 132)',\n                  'rgb(54, 162, 235)',\n                  'rgb(255, 205, 86)',\n                  '\trgb(60,179,113)',\n                  'rgb(255,127,80)',\n                  \n\n                ],\n                hoverOffset: 4,\n                data: [pie2.ones,pie2.twos, pie2.fours, pie2.sixes,pie2.extra_runs]\n              }\n            ]\n          }}\n  \n          options={{\n            plugins:{\n              title:{\n                display:true,\n                text:'Pie plot for '+ TN.bat2,\n                fontSize:50\n              },\n              legend:{\n                display:true,\n                position:'top'\n              },\n            }\n            \n          }}\n        />\n</div>\n\n\n          </div>\n       ) : null}\n          </div>\n\n\n  <br></br>\n  <br></br>\n  </div> \n  \n};\nexport default MatchDetailPage;\n\n\n","/Users/manan/Desktop/DBMS-Lab-4/client_/src/routes/MatchHomePage.jsx",[],"/Users/manan/Desktop/DBMS-Lab-4/client_/src/apis/VenueFinder.js",[],"/Users/manan/Desktop/DBMS-Lab-4/client_/src/apis/MatchFinder.js",[],"/Users/manan/Desktop/DBMS-Lab-4/client_/src/apis/PlayerFinder.js",[],"/Users/manan/Desktop/DBMS-Lab-4/client_/src/components/VenueList.jsx",["81"],"/Users/manan/Desktop/DBMS-Lab-4/client_/src/components/AddVenue.jsx",["82","83"],"import React, { useState, useContext } from 'react';\nimport VenueFinder from '../apis/VenueFinder';\nimport { Context } from '../context/Context';\n\nconst AddVenue = () => {\n    const head = {\n        color: '#7c795d', 'font-family': 'Trocchi', \n        'font-size': '60px', 'font-weight': 'normal', 'line-height': '48px', \n        'text-align': 'center'\n      }\n      const head2 = {\n        color: '#7c795d', 'font-family': 'Trocchi', \n        'font-size': '40px', 'font-weight': 'normal', 'line-height': '48px', \n        'text-align': 'center'\n      }\n\n      const btn = {\n        position: 'relative',\n        width: '180px',\n        height: '60px',\n        margin: '20px',\n        'line-height': '60px',\n        'letter-spacing': '2px',\n        'text-decoration': 'none',\n        'text-transform': 'uppercase',\n        'text-align': 'center',\n        hover: {\n          border: '1px solid transparent',\n          background: 'var(--color-red) url(https://i.postimg.cc/wBXGXbWN/pixel.png); // 360px x 1080px',\n          'transition-delay': '0.8s',\n          'background-size': '180px',\n          animation: 'animate var(--speed-fast) steps(8) forwards',\n      }\n    }\n    const {addVenues} = useContext(Context)\n    const [vname, setVenueName] = useState(\"\")\n    const [cname, setCountryName] = useState(\"\")\n    const [ctname, setCityName] = useState(\"\")\n    const [cp, setCapacity] = useState(\"\")\n    // const [priceRange, setPriceRange] = useState(\"Price Range\")\n  const handleSubmit = async (e) => {\n      e.preventDefault()\n      try {\n        const response = await VenueFinder.post(\"/\", {\n            name: vname,\n            location: cname,\n            city: ctname,\n            capacity: cp\n            // price_range: priceRange\n        })\n        addVenues(response.data.data.venue);\n        console.log(response);\n      } catch (err) {\n\n      }\n  }\n  return <div className='mb-4'>\n      <h1 style = {head2}>Register a Venue! </h1>\n      <form action=\"\">\n          <div className=\"form-row\">\n            <div className=\"col\">\n                <input value = {vname} onChange={(e) => setVenueName(e.target.value)} type=\"text\" className='form-control' placeholder='Venue Name'/>\n            </div>\n            <div className=\"col\">\n                <input value = {cname} onChange={(e) => setCountryName(e.target.value)} type=\"text\" className='form-control' placeholder='Country Name'/>\n            </div>\n            <div className=\"col\">\n                <input value = {ctname} onChange={(e) => setCityName(e.target.value)} type=\"text\" className='form-control' placeholder='City Name'/>\n            </div>\n            <div className=\"col\">\n                <input value = {cp} onChange={(e) => setCapacity(e.target.value)} type=\"number\" className='form-control' placeholder='Capacity'/>\n            </div>\n            <br></br>\n            <center><button onClick={handleSubmit} type = \"submit\" className=\"btn btn-outline-warning btn-lg\">Submit</button></center>\n            \n          </div>\n      </form>\n  </div>;\n};\n\nexport default AddVenue;\n","/Users/manan/Desktop/DBMS-Lab-4/client_/src/components/MatchList.jsx",["84","85","86"],{"ruleId":"87","severity":1,"message":"88","line":12,"column":9,"nodeType":"89","messageId":"90","endLine":12,"endColumn":11},{"ruleId":"91","severity":1,"message":"92","line":20,"column":5,"nodeType":"93","endLine":20,"endColumn":33},{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","replacedBy":"97"},{"ruleId":"87","severity":1,"message":"98","line":5,"column":8,"nodeType":"89","messageId":"90","endLine":5,"endColumn":13},{"ruleId":"99","severity":1,"message":"100","line":44,"column":3,"nodeType":"101","endLine":44,"endColumn":5,"suggestions":"102"},{"ruleId":"87","severity":1,"message":"98","line":5,"column":8,"nodeType":"89","messageId":"90","endLine":5,"endColumn":13},{"ruleId":"87","severity":1,"message":"103","line":6,"column":14,"nodeType":"89","messageId":"90","endLine":6,"endColumn":22},{"ruleId":"87","severity":1,"message":"104","line":9,"column":9,"nodeType":"89","messageId":"90","endLine":9,"endColumn":13},{"ruleId":"99","severity":1,"message":"100","line":43,"column":3,"nodeType":"101","endLine":43,"endColumn":5,"suggestions":"105"},{"ruleId":"99","severity":1,"message":"106","line":19,"column":3,"nodeType":"101","endLine":19,"endColumn":5,"suggestions":"107"},{"ruleId":"87","severity":1,"message":"108","line":5,"column":40,"nodeType":"89","messageId":"90","endLine":5,"endColumn":49},{"ruleId":"99","severity":1,"message":"109","line":91,"column":6,"nodeType":"101","endLine":91,"endColumn":8,"suggestions":"110"},{"ruleId":"111","severity":1,"message":"112","line":495,"column":1,"nodeType":"93","endLine":495,"endColumn":5},{"ruleId":"99","severity":1,"message":"113","line":20,"column":6,"nodeType":"101","endLine":20,"endColumn":8,"suggestions":"114"},{"ruleId":"87","severity":1,"message":"104","line":6,"column":11,"nodeType":"89","messageId":"90","endLine":6,"endColumn":15},{"ruleId":"87","severity":1,"message":"115","line":17,"column":13,"nodeType":"89","messageId":"90","endLine":17,"endColumn":16},{"ruleId":"87","severity":1,"message":"116","line":8,"column":11,"nodeType":"89","messageId":"90","endLine":8,"endColumn":17},{"ruleId":"99","severity":1,"message":"117","line":32,"column":6,"nodeType":"101","endLine":32,"endColumn":22,"suggestions":"118"},{"ruleId":"99","severity":1,"message":"119","line":32,"column":19,"nodeType":"120","endLine":32,"endColumn":21},"no-unused-vars","'bg' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-native-reassign",["121"],"no-negated-in-lhs",["122"],"'Chart' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'SV1', 'SV2', 'SV3', 'SV4', 'SV5', 'SV6', 'SV7', 'SV8', and 'id'. Either include them or remove the dependency array.","ArrayExpression",["123"],"'Doughnut' is defined but never used.","'head' is assigned a value but never used.",["124"],"React Hook useEffect has missing dependencies: 'setPointTable' and 'year'. Either include them or remove the dependency array.",["125"],"'Component' is defined but never used.","React Hook useEffect has missing dependencies: 'SB1', 'SB2', 'SER1', 'SER2', 'SINF', 'SMW', 'SNames', 'SP1', 'SP2', 'STBall1', 'STBall2', 'STBat1', 'STBat2', 'STN', 'STR1', 'STR2', 'STW1', 'STW2', 'STossWinner', 'SUMP', 'SVEN', 'Scat1', 'Scat2', 'id', 'setcomp', 'setcomp2', 'seti1bat', 'seti2bat', 'setpie', and 'setpie2'. Either include them or remove the dependency array.",["126"],"jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","React Hook useEffect has a missing dependency: 'setVenues'. Either include it or remove the dependency array.",["127"],"'btn' is assigned a value but never used.","'offset' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'pageCount', 'setMatches', and 'setOffset'. Either include them or remove the dependency array. You can also do a functional update 'setPageCount(p => ...)' if you only need 'pageCount' in the 'setPageCount' call.",["128"],"The 10 literal is not a valid dependency because it never changes. You can safely remove it.","Literal","no-global-assign","no-unsafe-negation",{"desc":"129","fix":"130"},{"desc":"129","fix":"131"},{"desc":"132","fix":"133"},{"desc":"134","fix":"135"},{"desc":"136","fix":"137"},{"desc":"138","fix":"139"},"Update the dependencies array to be: [SV1, SV2, SV3, SV4, SV5, SV6, SV7, SV8, id]",{"range":"140","text":"141"},{"range":"142","text":"141"},"Update the dependencies array to be: [setPointTable, year]",{"range":"143","text":"144"},"Update the dependencies array to be: [SB1, SB2, SER1, SER2, SINF, SMW, SNames, SP1, SP2, STBall1, STBall2, STBat1, STBat2, STN, STR1, STR2, STW1, STW2, STossWinner, SUMP, SVEN, Scat1, Scat2, id, setcomp, setcomp2, seti1bat, seti2bat, setpie, setpie2]",{"range":"145","text":"146"},"Update the dependencies array to be: [setVenues]",{"range":"147","text":"148"},"Update the dependencies array to be: [itemOffset, pageCount, setMatches, setOffset]",{"range":"149","text":"150"},[1343,1345],"[SV1, SV2, SV3, SV4, SV5, SV6, SV7, SV8, id]",[1349,1351],[589,591],"[setPointTable, year]",[3636,3638],"[SB1, SB2, SER1, SER2, SINF, SMW, SNames, SP1, SP2, STBall1, STBall2, STBat1, STBat2, STN, STR1, STR2, STW1, STW2, STossWinner, SUMP, SVEN, Scat1, Scat2, id, setcomp, setcomp2, seti1bat, seti2bat, setpie, setpie2]",[618,620],"[setVenues]",[1217,1233],"[itemOffset, pageCount, setMatches, setOffset]"]